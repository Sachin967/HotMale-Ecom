<%-include('./includes/header') %>

  <!-- Add Bootstrap CSS link -->
 



<body>
  <div class="wrap-header-cart js-panel-cart">
    <div class="s-full js-hide-cart"></div>
  
    <div class="header-cart flex-col-l p-l-65 p-r-25">
      <div class="header-cart-title flex-w flex-sb-m p-b-8">
        <span class="mtext-103 cl2">
          Your Cart
        </span>
  
        <div class="fs-35 lh-10 cl2 p-lr-5 pointer hov-cl1 trans-04 js-hide-cart">
          <i class="zmdi zmdi-close"></i>
        </div>
      </div>
  
      <div class="header-cart-content flex-w js-pscroll">
        
  
        <div class="w-full">
  
          <div class="header-cart-buttons flex-w w-full">
            <a href="/loadcart" class="flex-c-m stext-101 cl0 size-107 bg3 bor2 hov-btn3 p-lr-15 trans-04 m-r-8 m-b-10">
              View Cart
            </a>
  
            <a href="/checkout" class="flex-c-m stext-101 cl0 size-107 bg3 bor2 hov-btn3 p-lr-15 trans-04 m-b-10">
              Check Out
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="container mt-4">
   
      <div class="row">
        <!-- Shipping Address Box -->
        <div class="col-md-12 mb-3">
          <div class="border p-3">
            <h5>Shipping Address</h5>
            <p><strong>Name:</strong> <%= orders.userAddress.name %></p>
            <p><strong>Address:</strong> <%= orders.userAddress.address %></p>
            <p><strong>City:</strong> <%= orders.userAddress.city %></p>
            <p><strong>State:</strong> <%= orders.userAddress.state %></p>
            <p><strong>Zip Code:</strong> <%= orders.userAddress.pincode %></p>
          </div>
        </div>
      
        <!-- Product Details Box -->
        <div class="col-md-12">
          <table class="table table-bordered">
            <table class="table table-bordered">
              <thead>
                <tr>
                  <th>Product</th>
                  <th>Product Name</th>
                  <th>Quantity</th>
                  <th>Price</th>
                  <th>Order Date</th>
                  <th>Action</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>
                    <img src="uploads/products/<%= product.product.images[0] %>" alt="Product" width="80" height="80">
                  </td>
                  <td>
                    <div class="ms-3">
                      <h6><%= product.product.pname %></h6>
                    </div>
                  </td>
                  <td><%= product.quantity %></td>
                  <td>â‚¹<%= product.price %></td>
                  <td><%= new Date(orders.createdAt).toLocaleDateString() %></td>
                  <td>
                    <% if (product.status === 'Cancelled') { %>
                    <button class="btn btn-danger" disabled>Already cancelled</button>
                    <% } else if (product.status === 'Delivered') { %>
                      <% if (canReturn) { %>
                        <p>Product can only be returned within 10 days of ordering.</p>
                        <button class="btn btn-warning" onclick="returnProduct('<%= orderid %>', '<%= productId %>')">Return</button>
                      <% } else { %>
                        <!-- <button class="btn btn-secondary" disabled>Return</button> -->
                        <p>Product can only be returned within 10 days of ordering.</p>
                      <% } %>
                      <a href="/download-invoice/<%= orders._id %>/<%= productIndex %>" class="btn btn-primary">Download Invoice</a>
                    <% } else if (product.status === 'Returned') { %>
                    <button class="btn btn-success" disabled>Returned</button>
                    <% } else { %>
                      <button class="btn btn-danger" onclick="cancelProduct('<%= orderid %>', '<%= productId %>')">Cancel</button>
                    <% } %>
                  </td>
                </tr>
                <!-- Add more rows if needed -->
              </tbody>
            </table>
            
            
            
          </table>
        </div>
        
      </div>
    
  </div>
  
  
  <!-- Add Bootstrap JS and jQuery links -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/js/bootstrap.min.js"></script>



<script>
  // Function to cancel the order
  function cancelProduct(orderId,productId) {
    // Show a SweetAlert confirmation popup
    
    Swal.fire({
      title: 'Are you sure?',
      text: 'Do you want to cancel this order?',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Yes, cancel it!',
      cancelButtonText: 'No, keep it',
      confirmButtonColor: '#d33',
      cancelButtonColor: '#3085d6',
    }).then((result) => {
      if (result.isConfirmed) {
        // Send an AJAX request to the server to update the order status
        // Replace '/cancel-order' with the actual server route to handle the cancellation
        fetch(`/cancel-order/${orderId}/${productId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          // No need to include orderId in the request body
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {

            console.log(data);
            // Show a SweetAlert success message
            Swal.fire('Order Canceled', 'The order has been canceled.', 'success')
              .then(() => {
                // Reload the page after successful cancellation
                window.location.href= '/order-details'
              });
          } else {
            // Show a SweetAlert error message if the cancellation fails
            Swal.fire('Error', 'Failed to cancel the order. Please try again later.', 'error');
          }
        })
        .catch(error => {
          console.log('Error:', error.message);
        });
      }
    });
  }


  function returnProduct(orderId,productId) {
    // Show a SweetAlert confirmation popup
    
    Swal.fire({
      title: 'Are you sure?',
      text: 'Do you want to return this order?',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Yes, return it!',
      cancelButtonText: 'No, keep it',
      confirmButtonColor: '#d33',
      cancelButtonColor: '#3085d6',
    }).then((result) => {
      if (result.isConfirmed) {
        // Send an AJAX request to the server to update the order status
        // Replace '/cancel-order' with the actual server route to handle the cancellation
        fetch(`/return-order/${orderId}/${productId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          // No need to include orderId in the request body
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {

            console.log(data);
            // Show a SweetAlert success message
            Swal.fire('Order Returned', 'The order has been returned.', 'success')
              .then(() => {
                // Reload the page after successful cancellation
                window.location.href= '/order-details'
              });
          } else {
            // Show a SweetAlert error message if the cancellation fails
            Swal.fire('Error', 'Failed to return the order. Please try again later.', 'error');
          }
        })
        .catch(error => {
          console.log('Error:', error);
        });
      }
    });
  }
</script>



<%-include('./includes/footer') %>



